// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingRef")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("billing_ref");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientRef")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_ref");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("delivery_address");

                    b.Property<DateTime>("InstructionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("instruction_date");

                    b.Property<string>("PickupAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pickup_address");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_instructions");

                    b.ToTable("instructions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int>("InstructionId")
                        .HasColumnType("integer")
                        .HasColumnName("instruction_id");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_code");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_description");

                    b.Property<decimal>("Qty")
                        .HasColumnType("numeric")
                        .HasColumnName("qty");

                    b.HasKey("ProductId")
                        .HasName("pk_product");

                    b.HasIndex("InstructionId")
                        .HasDatabaseName("ix_product_instruction_id");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ScheduleTransport", b =>
                {
                    b.Property<int>("ScheduleTransportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("schedule_transport_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduleTransportID"));

                    b.Property<DateTime>("DateScheduled")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_scheduled");

                    b.Property<int>("InstructionId")
                        .HasColumnType("integer")
                        .HasColumnName("instruction_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<string>("Transporter")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("transporter");

                    b.HasKey("ScheduleTransportID")
                        .HasName("pk_schedule_transport");

                    b.HasIndex("InstructionId")
                        .HasDatabaseName("ix_schedule_transport_instruction_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_schedule_transport_product_id");

                    b.ToTable("schedule_transport", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Instruction", "Instruction")
                        .WithMany("Products")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_instructions_instruction_id");

                    b.Navigation("Instruction");
                });

            modelBuilder.Entity("Domain.Entities.ScheduleTransport", b =>
                {
                    b.HasOne("Domain.Entities.Instruction", "Instruction")
                        .WithMany("Transporter")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedule_transport_instructions_instruction_id");

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Transporter")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedule_transport_product_product_id");

                    b.Navigation("Instruction");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Instruction", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Transporter");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("Transporter");
                });
#pragma warning restore 612, 618
        }
    }
}
